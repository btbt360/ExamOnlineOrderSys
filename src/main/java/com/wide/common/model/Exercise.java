package com.wide.common.model;

import com.wide.common.model.base.BaseExercise;
import com.wide.common.model.query.QueryExam;
import com.wide.common.model.query.QueryExercise;
import com.wide.util.TypeChecker;
import com.wide.viewmodel.DataTablesModel;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Exercise extends BaseExercise<Exercise> {
	public static final Exercise dao = new Exercise();
	
	@SuppressWarnings("rawtypes")
	public DataTablesModel pageDataTables(int pageNum, int pageSize, QueryExercise queryExercise) {
		// TODO Auto-generated method stub
	    String select = "select id,name,subject_id,itembank_id,sumcount,alreadycount,isenable";
	    StringBuilder sqlExceptSelect = new StringBuilder(" from sys_exercise ");
	    /**
	    if (search!=null&&!search.equals("")) {
	        sqlExceptSelect.append(" AND (b.title like ? or b.content like ? )");
	        parameters.add("%" + search + "%");
	        parameters.add("%" + search + "%");
	    } 
	     **/
	    sqlExceptSelect.append(whereQuery(queryExercise));
	    sqlExceptSelect.append(orderbyQuery(queryExercise));
	    
	    return this.paginateDataTables(pageNum, pageSize, select, sqlExceptSelect.toString());
	}
	/**
	 * query where查询
	 * 
	 * */
	private String whereQuery(QueryExercise query){
		String where=" where 1=1  and isdel = 0 ";
		if(!TypeChecker.isEmpty(query.getName())){
			where += " and name like '%"+query.getName()+"%'";
		}
		if(!TypeChecker.isEmpty(query.getItembankid())){
			where += " and itembank_id = '"+query.getItembankid()+"'";
		}
		if(!TypeChecker.isEmpty(query.getSubjectid())){
			where += " and subject_id = '"+query.getSubjectid()+"'";
		}
		if(!TypeChecker.isEmpty(query.getUserid())){
			where += " and user_id = '"+query.getUserid()+"'";
		}
		return where;
		
	}
	/**
	 * query order by 
	 * 
	 * */
	private String orderbyQuery(QueryExercise query){
		String orderby = " order by create_date desc ";
		return orderby;
		
	}
}
